{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","isReversed","setReverse","visibleGoods","goods","sortedGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","handleSort","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,kBAAAA,E,oBAAAA,E,iBAAAA,M,KAML,IA2BaE,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA/BW,SACjBC,EACAL,EACAE,GAEA,IAAMI,EAAW,YAAOD,GAExB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACvD,MAEF,KAAKf,EAASiB,OACZN,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAW5D,OAJIX,GACFI,EAAYQ,UAGPR,EAOcS,CAAWnB,EAAiBI,EAAWE,GAO5D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcL,EAASY,WAErCY,QAAS,kBAAMlB,EAAaN,EAASY,WALvC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAcL,EAASiB,SAErCO,QAAS,kBAAMlB,EAAaN,EAASiB,SALvC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAYD,IAL7B,sBAUEF,IAAcL,EAASI,SAAWG,IAClC,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBlB,EAAaN,EAASI,SACtBI,GAAW,IAqCL,sBAWJ,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6f613d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  DEFAULT = 'DEFAULT',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nconst handleSort = (\n  goods: string[],\n  sortField: SortType,\n  isReversed: boolean,\n) => {\n  const sortedGoods = [...goods];\n\n  switch (sortField) {\n    case SortType.ALPHABET:\n      sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      sortedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.DEFAULT);\n  const [isReversed, setReverse] = useState(false);\n\n  const visibleGoods = handleSort(goodsFromServer, sortField, isReversed);\n\n  const handleReset = () => {\n    setSortField(SortType.DEFAULT);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortField(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.LENGTH,\n          })}\n          onClick={() => setSortField(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SortType.DEFAULT || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}